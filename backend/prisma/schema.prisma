generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name                String
  email               String    @unique
  telegramId          String?
  tgConnectCode       String
  subscriptionEndDate DateTime?
  maxActiveWallets    Int?

  wallets          Wallet[]
  subscriptions    Subscription[]
  notificationLogs NotificationLog[]
}

model Subscription {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId   String
  stripeId String
  isActive Boolean @default(false)

  user User @relation(fields: [userId], references: [id])
}

model Wallet {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  address String
  userId  String
  user    User   @relation(fields: [userId], references: [id])

  tokenAccount TokenAccount[]
}

model TokenAccount {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  address     String  @unique
  isDelegated Boolean @default(false)

  walletId String
  wallet   Wallet @relation(fields: [walletId], references: [id])
}

model NotificationLog {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())

  message       String
  wasSuccessful Boolean
  userId        String

  user User @relation(fields: [userId], references: [id])
}
